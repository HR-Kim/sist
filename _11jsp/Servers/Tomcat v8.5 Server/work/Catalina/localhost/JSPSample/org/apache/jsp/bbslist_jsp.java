/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2017-02-01 03:09:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sist.Bbs;
import java.util.List;
import com.sist.BbsAccess;
import com.sist.Member;

public final class bbslist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


public String arrow(int depth){
	String rs = "<img src='image/arrow.png' width='20px' height='20px'>";
	String nbsp = "&nbsp;&nbsp;&nbsp;&nbsp;";
	String ts = "";
	for(int i = 0; i<depth; i++){
		ts += nbsp;
	}
	return depth==0 ? "" : ts + rs;  
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sist.Bbs");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.sist.BbsAccess");
    _jspx_imports_classes.add("com.sist.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

BbsAccess access = BbsAccess.getInstance();
List<Bbs> bbslist = access.getBbsList();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>bbslist</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("table{\r\n");
      out.write("\tborder-collapse:collapse;\r\n");
      out.write("}\r\n");
      out.write("table, th, td{\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("}\r\n");
      out.write("th{\r\n");
      out.write("\tbackground-color: green;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write(".tda{\r\n");
      out.write("      background-color: #abcdef;\r\n");
      out.write("      color: black;\r\n");
      out.write("   }\r\n");
      out.write(".tdb{\r\n");
      out.write("      background-color: #febdab;\r\n");
      out.write("      color: black;\r\n");
      out.write(" }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");

Object ologin = session.getAttribute("login");
Member member = null;
if (ologin == null){

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"로그인 하십시오\");\r\n");
      out.write("\t\tlocation.href = \"index.jsp\";\r\n");
      out.write("\t</script>\r\n");
      out.write("\t");

	return;
}
member = (Member)ologin;

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h3>환영합니다");
      out.print(member.getName() );
      out.write("님 반갑습니다. </h3>\r\n");
      out.write("\r\n");
      out.write("<a href=\"calendar.jsp\">일정보기</a>\r\n");
      out.write("\r\n");
      out.write("<a href='pdslist.jsp'>자료실</a>\r\n");
      out.write("\r\n");
      out.write("<a href='logout.jsp'>로그 아웃</a>\r\n");
      out.write("\r\n");
      out.write("<hr/>\r\n");
      out.write("\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<col width=\"50\"/><col width=\"500\"/><col width=\"150\"/>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th>순서</th><th>제목</th><th>작성자</th>\r\n");
      out.write("</tr>\r\n");

if(bbslist == null || bbslist.size() == 0){

      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"3\"\t>작성된 글이 없습니다.</td>\r\n");
      out.write("\t</tr>\r\n");
	
}
for (int i = 0; i < bbslist.size(); i++){
	Bbs bbs = bbslist.get(i);
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<tr ");
      out.print(i%2 ==0 ? "class='tda'" : "class='tdb'" );
      out.write(">\r\n");
      out.write("\t\t<td>");
      out.print(i+1 );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(arrow(bbs.getDepth()) );
      out.write("\r\n");
      out.write("\t\t\t<a href='bbsdetail.jsp?seq=");
      out.print(bbs.getSeq());
      out.write("'>\r\n");
      out.write("\t\t\t\t");
      out.print(bbs.getTitle() );
      out.write("\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t<td>");
      out.print(bbs.getId() );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
	
}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<a href='bbswrite.jsp'>글쓰기</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
