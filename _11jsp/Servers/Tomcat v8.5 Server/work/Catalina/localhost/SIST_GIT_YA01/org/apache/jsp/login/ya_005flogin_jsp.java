/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2017-02-21 03:01:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ya_005flogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- prevent IE6 flickering -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    try {\r\n");
      out.write("        document.execCommand('BackgroundImageCache', false, true);\r\n");
      out.write("    } catch (e) {\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.header{\r\n");
      out.write("\t\tposition : fixed;\r\n");
      out.write("\t\theight : 100px;\r\n");
      out.write("\t\tbackground: #fc676e;\r\n");
      out.write("\t}\r\n");
      out.write("\t.foot{\r\n");
      out.write("\t\theight : 200px;\r\n");
      out.write("\t\tbackground: #3f3e3e;\r\n");
      out.write("\t}\r\n");
      out.write("\t.blank{\r\n");
      out.write("\t\theight: 100px;\r\n");
      out.write("\t}\t.location{\r\n");
      out.write("\t\tpadding-top : 50px;\r\n");
      out.write("\t\theight: 300px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.popular{\r\n");
      out.write("\t\theight: 300px;\r\n");
      out.write("\t}\r\n");
      out.write("\ttable,tr,td{\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\t/* border: 1px solid black */\r\n");
      out.write("\t}\r\n");
      out.write("\timg:hover{\r\n");
      out.write("\t\topacity: 0.5;\r\n");
      out.write("\t}\r\n");
      out.write("\t.checkbox-wrap { cursor: pointer; }\r\n");
      out.write("\t.checkbox-wrap .check-icon  { display: inline-block; width: 18px; height: 18px; background: url(../img/unchecked.png) left center no-repeat; vertical-align: middle; transition-duration: .3s; }\r\n");
      out.write("\t.checkbox-wrap input[type=checkbox] { display: none; }\r\n");
      out.write("\t.checkbox-wrap input[type=checkbox]:checked + .check-icon { background-image: url(../img/checked.png)\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- Top -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../super/superTop.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- 빈곳   -->\t\r\n");
      out.write("\t<div class=\"blank\">\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<col width=\"222\"/><col width=\"222\"/><col width=\"222\"/>\r\n");
      out.write("    \t<col width=\"222\"/><col width=\"222\"/><col width=\"222\"/>\r\n");
      out.write("    \t<col width=\"222\"/><col width=\"222\"/><col width=\"222\"/>\r\n");
      out.write("    \t<tr>\r\n");
      out.write("    \t\t<td></td>\r\n");
      out.write("    \t\t<td colspan=\"7\">________</td>\r\n");
      out.write("    \t\t<td></td>\r\n");
      out.write("    \t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t \r\n");
      out.write("\t\r\n");
      out.write("<!-- 로그인 -->\t\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\" style=\"padding-top: 200px; padding-bottom: 200px; padding-left: 330px; padding-right: 330px\">\r\n");
      out.write("\t  <h3>로그인</h3>\r\n");
      out.write("\t  \r\n");
      out.write("\t  <form action=\"ya_loginAfter.jsp?type=login\" method=\"post\" name=\"myForm\" id=\"myForm\">\r\n");
      out.write("\t    <div class=\"input-group\">\r\n");
      out.write("\t      <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope\"></i></span>\r\n");
      out.write("\t      <input id=\"email\" type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"Email\" style=\"width: 500px; height: 50px\">\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div class=\"input-group\">\r\n");
      out.write("\t      <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\r\n");
      out.write("\t      <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" style=\"width: 500px; height: 50px\">\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <div class=\"input-group\">\r\n");
      out.write("\t    <input type=\"checkbox\" id=\"cb_saveId\" />\r\n");
      out.write("\t\t<label for=\"checkbox1\" name=\"checkbox1_lbl\" >이메일 저장</label>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t    <div class=\"input-group\">\r\n");
      out.write("\t    <input type=\"button\" onclick=\"mySubmit(1)\" class=\"btn btn-info\" value=\"LOGIN\" style=\"background-color: #ff6b6b; font-size: 30px; width: 538px; height: 50px; border: 0; outline: 0\">\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t    <br>\r\n");
      out.write("\t    <a href=\"ya_findPassword.jsp\"><span class=\"glyphicon glyphicon-search\"></span>비밀번호를 잊어버리셨나요?</a>\r\n");
      out.write("\t    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t    <a href=\"ya_whoJoin.jsp\"><span class=\"glyphicon glyphicon-envelope\"></span>야하자 이메일로 회원가입</a> \r\n");
      out.write("\t  </form>\r\n");
      out.write("\t  <br>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write(" ///////////////////////////////////////////////\r\n");
      out.write(" (function init(){\r\n");
      out.write("\r\n");
      out.write("  // 쿠키값을 가져온다.\r\n");
      out.write("\r\n");
      out.write("  var cookie_email = getLogin();\r\n");
      out.write("\r\n");
      out.write("  if(cookie_email != \"\") {\r\n");
      out.write("\r\n");
      out.write("   document.getElementById(\"email\").value = cookie_email;\r\n");
      out.write("   cb_saveId.checked = true;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write(" })()//생성자초럼 호출하지 않아도 바로 실행된다\r\n");
      out.write(" // 로그인 버튼 클릭시\r\n");
      out.write("\r\n");
      out.write(" function mySubmit(index) {\r\n");
      out.write("  \r\n");
      out.write("   console.log(\"mySubmit=\"+index); \r\n");
      out.write("  if(index==1){\r\n");
      out.write("   if(cb_saveId.checked == true){\r\n");
      out.write("    saveLogin(document.getElementById(\"email\").value);\r\n");
      out.write("   }else{\r\n");
      out.write("    saveLogin(\"\");\r\n");
      out.write("   }\r\n");
      out.write("  }\r\n");
      out.write("  if(index==2){\r\n");
      out.write("   document.myForm.action='join.html';\r\n");
      out.write("  }\r\n");
      out.write("  console.log(\"document.myForm.action=\"+document.myForm.action.value);\r\n");
      out.write("  \r\n");
      out.write("  document.myForm.submit();\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write(" function saveLogin(email) {\r\n");
      out.write("\r\n");
      out.write("  if(email != \"\") {\r\n");
      out.write("\r\n");
      out.write("  // useremail 쿠키에 email 값을 7일간 저장\r\n");
      out.write("\r\n");
      out.write("  setSave(\"useremail\", email, 7);\r\n");
      out.write("\r\n");
      out.write("  }else{\r\n");
      out.write("\r\n");
      out.write("  // useremail 쿠키 삭제\r\n");
      out.write("\r\n");
      out.write("  setSave(\"useremail\", email, -1);\r\n");
      out.write("\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write(" function setSave(name, value, expiredays) {\r\n");
      out.write("\r\n");
      out.write("  var today = new Date();\r\n");
      out.write("\r\n");
      out.write("  today.setDate( today.getDate() + expiredays );\r\n");
      out.write("\r\n");
      out.write("  document.cookie = name + \"=\" + escape( value ) + \"; path=/; expires=\" + today.toGMTString() + \";\"\r\n");
      out.write("\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write(" function getLogin() {\r\n");
      out.write("\r\n");
      out.write("  // useremail 쿠키에서 email 값을 가져온다.\r\n");
      out.write("\r\n");
      out.write("  var cook = document.cookie + \";\";\r\n");
      out.write("\r\n");
      out.write("  var idx = cook.indexOf(\"useremail\", 0);\r\n");
      out.write("\r\n");
      out.write("  var val = \"\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  if(idx != -1) {\r\n");
      out.write("\r\n");
      out.write("  cook = cook.substring(idx, cook.length);\r\n");
      out.write("\r\n");
      out.write("  begin = cook.indexOf(\"=\", 0) + 1;\r\n");
      out.write("\r\n");
      out.write("  end = cook.indexOf(\";\", begin);\r\n");
      out.write("\r\n");
      out.write("  val = unescape(cook.substring(begin, end));\r\n");
      out.write("\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  return val;\r\n");
      out.write("\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<!--Foot -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../super/superFoot.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
