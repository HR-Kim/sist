/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2017-02-20 10:53:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.HashMap;
import com.Dao.MyPageDao;
import com.Beans.Ya_ReserveBean;
import java.util.ArrayList;

public final class ya_005fGuest_005fPoint_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.Beans.Ya_ReserveBean");
    _jspx_imports_classes.add("com.Dao.MyPageDao");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Ya_ReserveBean> bean_list = (ArrayList<Ya_ReserveBean>)request.getAttribute("bean_list");
	String email = request.getParameter("email");
	
	MyPageDao mpdao = MyPageDao.getInstance();
	HashMap<String,Integer> map = new HashMap<String,Integer>();
	map = mpdao.do_count_member_state(email);

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("<center>\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<col width=\"200\"/><col width=\"500\"/>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td height=\"50\" style=\"text-align: center;\"><h4><b>내포인트</b></h4></td>\r\n");
      out.write("\t\t<td height=\"50\" style=\"text-align: right; padding-right: 100px\">");
      out.print(map.get("point")==null?0:map.get("point") );
      out.write(" 원</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</center>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div style=\"padding-top: 30px\">\r\n");
      out.write("<center>\r\n");
      out.write("<table border=\"1\" bordercolor=\"#000000\">\r\n");
      out.write("<col width=\"200\"/><col width=\"200\"/><col width=\"100\"/><col width=\"200\"/>\r\n");
      out.write("\t<tr bgcolor=\"#808000\" height=\"30\">\r\n");
      out.write("\t\t<th style=\"text-align: center;\"><b>일자</b></th>\r\n");
      out.write("\t\t<th style=\"text-align: center;\"><b>상세정보</b></th>\r\n");
      out.write("\t\t<th style=\"text-align: center;\"><b>구분</b></th>\r\n");
      out.write("\t\t<th style=\"text-align: center;\"><b>포인트</b></th>\r\n");
      out.write("\t</tr>\r\n");

	if(bean_list != null || bean_list.size() !=0){
		for(int i=0;i<bean_list.size();i++){
			Ya_ReserveBean bean = new Ya_ReserveBean();
			bean = bean_list.get(i);
			if(bean.getState() ==0){
				if(bean.getPoint() != 0){
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr height=\"30\">\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getUse_dt() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getMt_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>차감</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getPoint() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t");
}else if(bean.getState() ==1){
				if(bean.getPoint() != 0){
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr height=\"30\">\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(bean.getUse_dt() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(bean.getMt_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>차감</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(bean.getPoint());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
} 
				if(bean.getPrice()-bean.getPoint() != 0){
				
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr height=\"30\">\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(bean.getUse_dt() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(bean.getMt_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>지급</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print((bean.getPrice()-bean.getPoint())/10);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");
	} 
      out.write("\r\n");
      out.write("\t\t\t");
}else if(bean.getState() ==2){	
			if(bean.getPoint() != 0){
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr height=\"30\">\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getUse_dt() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getMt_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>지급</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getPoint() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr height=\"30\">\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getUse_dt() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getMt_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>차감</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(bean.getPoint() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
} 
      out.write('\r');
      out.write('\n');
		}
	}
	}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</center>\r\n");
      out.write("</div>\r\n");
      out.write("<div>\r\n");
      out.write("<center>\r\n");
      out.write("<table style=\"width: 50%; margin: auto;\">\r\n");
      out.write("\t<col width=\"222\"/><col width=\"222\"/><col width=\"222\"/>\r\n");
      out.write("   \t<col width=\"222\"/><col width=\"222\"/><col width=\"222\"/>\r\n");
      out.write("   \t<col width=\"222\"/><col width=\"222\"/><col width=\"222\"/>\r\n");
      out.write("    <tr>\r\n");
      out.write("    \t<td colspan=\"9\" align=\"center\">\r\n");
      out.write("    \t");

    	String str = " ";
    	int pageCount = 0;
    	if(bean_list.size()!=0){
    		pageCount = bean_list.get(0).getTot_cnt()%5 > 0 ? (bean_list.get(0).getTot_cnt()/5)+1 : (bean_list.get(0).getTot_cnt()/5); 
    	}else{
    		pageCount = 1;
    	}
    	for(int i=0; i<pageCount;i++){
    	
      out.write("\r\n");
      out.write("    \t<a href=\"javascript:;\" onclick= \"location.href='mypage_Control.jsp?command=guestpointlist&value=after&pageNum=");
      out.print(i+1 );
      out.write("&email=");
      out.print(email);
      out.write("'\" >\r\n");
      out.write("    \t<font size=\"3\">\r\n");
      out.write("    \t");
      out.print(i+1 );
      out.print(str );
      out.write("\r\n");
      out.write("    \t");
} 
      out.write("\r\n");
      out.write("    \t</font>\r\n");
      out.write("    \t</a>\r\n");
      out.write("    \t</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("</center>\r\n");
      out.write("</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
