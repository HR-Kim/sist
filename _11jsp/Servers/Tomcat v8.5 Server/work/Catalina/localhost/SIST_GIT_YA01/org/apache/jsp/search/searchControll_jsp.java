/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2017-02-20 09:51:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.search;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.Beans.Ya_ImgBean;
import com.Dao.PointDao;
import com.Beans.Ya_ZzimBean;
import com.Dao.ZzimDao;
import com.Beans.Ya_MemberBean;
import com.Beans.Ya_ReserveBean;
import com.Dao.ReserveDao;
import com.Beans.Ya_ReviewBean;
import java.util.List;
import com.Dao.MotelDao;
import com.Beans.Ya_MotelBean;
import java.util.ArrayList;
import com.Dao.SearchPageDao;

public final class searchControll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

//
//
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.Beans.Ya_MotelBean");
    _jspx_imports_classes.add("com.Dao.MotelDao");
    _jspx_imports_classes.add("com.Dao.PointDao");
    _jspx_imports_classes.add("com.Dao.ZzimDao");
    _jspx_imports_classes.add("com.Beans.Ya_ImgBean");
    _jspx_imports_classes.add("com.Beans.Ya_MemberBean");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.Beans.Ya_ReserveBean");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.Beans.Ya_ReviewBean");
    _jspx_imports_classes.add("com.Dao.SearchPageDao");
    _jspx_imports_classes.add("com.Beans.Ya_ZzimBean");
    _jspx_imports_classes.add("com.Dao.ReserveDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


request.setCharacterEncoding("UTF-8");

//
//
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script>\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String command = request.getParameter("command");

	if(command.equals("detailAf")){
		String type = request.getParameter("type");
		String motelNum = request.getParameter("motel_num");
		int motel_num = Integer.parseInt(motelNum);
	
		MotelDao dao = MotelDao.getInstance();
	
		Ya_MotelBean dto = (Ya_MotelBean)dao.do_detail(motel_num);

		request.setAttribute("dto", dao.do_detail(motel_num));
	
		if(type.equals("room")) pageContext.forward("searchDetail.jsp?contentsDiv=room");
		else if(type.equals("pay")) pageContext.forward("searchDetail.jsp?contentsDiv=pay");
		else if(type.equals("review")){
			String pageNum = (request.getParameter("pageNum")==null || request.getParameter("pageNum")=="")?"1":request.getParameter("pageNum");
			int page_Num = Integer.parseInt(pageNum);
			
			List<Ya_ReviewBean> list =  dao.do_detail_review(page_Num,4 ,motel_num);
			if(list.size()==0){
				pageContext.forward("searchDetail.jsp?contentsDiv=review");
			
				 }else{
			request.setAttribute("list", list);
			
			pageContext.forward("searchDetail.jsp?contentsDiv=review");
				 }
		}
	
	}else if(command.equals("detail")){
		String motelNum = request.getParameter("motel_num");
		int motel_num = Integer.parseInt(motelNum);
		
		MotelDao dao = MotelDao.getInstance();
		
		Ya_MotelBean dto = (Ya_MotelBean)dao.do_detail(motel_num);
	
		request.setAttribute("dto", dao.do_detail(motel_num));
				
		pageContext.forward("searchDetail.jsp?contentsDiv=room");
		
		
	}else if(command.equals("word")){
		String searchWord = request.getParameter("searchWord");
		String type =(request.getParameter("type")==null || request.getParameter("type")=="")?"BASIC":request.getParameter("type");
		String pageNum = (request.getParameter("pageNum")==null || request.getParameter("pageNum")=="")?"1":request.getParameter("pageNum");
		int page_Num = Integer.parseInt(pageNum);
		
		String isaddress = request.getParameter("isaddress");
		
		session.setAttribute("word",searchWord);
		session.setAttribute("type",type);

		SearchPageDao dao = SearchPageDao.getInstance();
		
		 if(type.equals("STAR")){
			if(isaddress.equals("ok")){
				ArrayList<Object> list = dao.do_address_search(page_Num, 12, "STAR", searchWord);
				
				if(list.size()==0){
					pageContext.forward("searchPage.jsp");
					
				}else{
				request.setAttribute("list", list);
				pageContext.forward("searchPage.jsp");	
				}
			}else{
				ArrayList<Object> list = dao.do_search(page_Num, 12, "STAR", searchWord);
				
				 if(list.size()==0){
				pageContext.forward("searchPage.jsp");
			
				 }else{
				request.setAttribute("list", list);
				pageContext.forward("searchPage.jsp");
		
				 }
			}
			 
		}else if(type.equals("PAY")){
			if(isaddress.equals("ok")){
				ArrayList<Object> list = dao.do_address_search(page_Num, 12, "PAY", searchWord);
				
				if(list.size()==0){
					pageContext.forward("searchPage.jsp");
					
				}else{
				request.setAttribute("list", list);
				pageContext.forward("searchPage.jsp");	
				}
			}else{
			
				ArrayList<Object> list = dao.do_search(page_Num, 12, "PAY", searchWord);
		 
				if(list.size()==0){
					pageContext.forward("searchPage.jsp");
				}else{
					request.setAttribute("list", list);
					pageContext.forward("searchPage.jsp");
				 }	
			}
		}else if(type.equals("REVIEW")){
			if(isaddress.equals("ok")){
				ArrayList<Object> list = dao.do_address_search(page_Num, 12, "REVIEW", searchWord);
				
				if(list.size()==0){
					pageContext.forward("searchPage.jsp");
					
				}else{
				request.setAttribute("list", list);
				pageContext.forward("searchPage.jsp");	
				}
			}else{	
				ArrayList<Object> list = dao.do_search(page_Num, 12, "REVIEW", searchWord);
				 if(list.size()==0){
					pageContext.forward("searchPage.jsp");
				 }else{
					request.setAttribute("list", list);
					pageContext.forward("searchPage.jsp");	
				 }
			}
		}else if(type.equals("BASIC")){
			if(isaddress.equals("ok")){
				ArrayList<Object> list = dao.do_address_search(page_Num, 12, "BASIC", searchWord);
				
				if(list.size()==0){
					pageContext.forward("searchPage.jsp");
					
				}else{
				request.setAttribute("list", list);
				pageContext.forward("searchPage.jsp");	
				}
			}else{
				ArrayList<Object> list = dao.do_search(page_Num, 12, "BASIC", searchWord);
				 if(list.size()==0){
					pageContext.forward("searchPage.jsp");
				}else{
					request.setAttribute("list", list);
					pageContext.forward("searchPage.jsp");	
				}
			}
		}
	}else if(command.equals("ZZIM")){
		ZzimDao dao = ZzimDao.getInstance();
		String motelNum = request.getParameter("motelNum");
		String email = request.getParameter("email");
		Ya_ZzimBean zzimdto = new  Ya_ZzimBean();
		zzimdto.setMotel_num(Integer.parseInt(motelNum));
		zzimdto.setEmail(email);
		dao.do_insert(zzimdto);
		
		pageContext.forward("searchControll.jsp?command=detail&motel_num="+motelNum);
	}else if(command.equals("ZZIMdelete")){
		ZzimDao dao = ZzimDao.getInstance();
		String motelNum = request.getParameter("motelNum");
		String email = request.getParameter("email");
		Ya_ZzimBean zzimdto = new  Ya_ZzimBean();
		zzimdto.setMotel_num(Integer.parseInt(motelNum));
		zzimdto.setEmail(email);
		dao.do_delete(zzimdto);
		
		pageContext.forward("searchControll.jsp?command=detail&motel_num="+motelNum);
	}
	
	////////////////////////////////////////////////////// 결제 후
	else if(command.equals("reser")){
		String name = request.getParameter("reserName");
		String use_date = request.getParameter("date");
		String price = request.getParameter("price");
		String motelNum = request.getParameter("motelNum");
		String reserPoint = request.getParameter("reserPoint");
		String roomtype = request.getParameter("roomtype");
		String email = "";
		if(session.getAttribute("member")!=null){ 
		Ya_MemberBean memberBean = (Ya_MemberBean)session.getAttribute("member"); 
		email = memberBean.getEmail();
		}
		
		ReserveDao dao = ReserveDao.getInstance();
		Ya_ReserveBean dto = new Ya_ReserveBean();
		dto.setEmail(email);
		dto.setName(name);
		dto.setMotel_num(Integer.parseInt(motelNum));
		dto.setUse_dt(use_date);
		dto.setPoint(Integer.parseInt(reserPoint));
		dto.setPrice(Integer.parseInt(price));
		dto.setRoom_type(roomtype);
		if(dao.do_insert(dto)){
			PointDao podao = PointDao.getInstance();
			System.out.println("예약시 날짜랑 이메일 "+ use_date + email);
			int seq = dao.do_search_seq(use_date,email);
			System.out.println("예약시 seq" + seq);
			
			podao.do_add_point(seq, Integer.parseInt(reserPoint), "사용");	
		}
			
		pageContext.forward("searchControll.jsp?command=detail&motel_num="+motelNum);
		
	}

	
	
	

      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
