/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2017-02-21 03:49:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.search;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.Dao.MemberDao;
import com.Beans.Ya_MemberBean;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

//
//
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.Dao.MemberDao");
    _jspx_imports_classes.add("com.Beans.Ya_MemberBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


request.setCharacterEncoding("UTF-8");

//
String date = request.getParameter("date");
String roomType = request.getParameter("check");
//
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//떄려박아\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("$(\"#Btn\").click(function() {\r\n");
      out.write("\t\t   \r\n");
      out.write("\t   $(\"#totPay\").attr(\"value\",Number($(\"#onPa\").val())-Number($(\"#usePoint\").val()));\r\n");
      out.write("\t   \r\n");
      out.write("\t   \r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("$(\"#pamen\").click(function(){\r\n");
      out.write("\tvar animal = $(':input[name=chk_info]:radio:checked').val();\r\n");
      out.write("\r\n");
      out.write("    if($('#naid').val()==null || $('#naid').val()==\"\"){\r\n");
      out.write("    \talert(\"이름을 입력해주세요\");\r\n");
      out.write("    }else{\r\n");
      out.write("\t        \t\r\n");
      out.write("\tif( animal ){\r\n");
      out.write("    \talert(animal+\"카드로 결제 되었습니다.\")\r\n");
      out.write("       \t$(\"#reserName\", opener.document).val($(\"#naid\").val());\r\n");
      out.write("    \t$(\"#reserPoint\", opener.document).val($(\"#popo\").val());\r\n");
      out.write("    \t\r\n");
      out.write("    \t//opener.document.getElementById(\"reserName\").value = \"c_val\";\r\n");
      out.write("    \t//opener.document.getElementById(\"reserPoint\").value = \"c_val\";\r\n");
      out.write("    \t\r\n");
      out.write("    \topener.location.href=\"javascript:p_reser();\";\r\n");
      out.write("    \tself.close();\r\n");
      out.write("    \t\r\n");
      out.write("    }else{\r\n");
      out.write("        alert(\"카드사를 선택해주세요\");\r\n");
      out.write("        \r\n");
      out.write("    }  \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(function() {\r\n");
      out.write("    $(\"#popo\").keyup(function(){\r\n");
      out.write("    \t    \t\r\n");
      out.write("    \tif(Number($(\"#hid\").val())<Number($(\"#popo\").val())){\r\n");
      out.write("    \t\t$(\"#usePoint\").attr(\"value\",$(\"#popo\").val());\r\n");
      out.write("    \t\talert(\"사용가능한 포인트보다 큽니다.\");\r\n");
      out.write("    \t\t$(\"#Btn\").focus();\r\n");
      out.write("    \t\t$(\"#usePoint\").attr(\"value\",\"0\");\r\n");
      out.write("    \t\t$(this).val('0');\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t} \r\n");
      out.write("    \tif( Number($(\"#onPa\").val())<Number($(\"#popo\").val()) ){\r\n");
      out.write("    \t\t$(\"#usePoint\").attr(\"value\",$(\"#popo\").val());\r\n");
      out.write("    \t\talert(\"결제금액보다 포인트보다 큽니다.\");\r\n");
      out.write("    \t\t$(\"#Btn\").focus();\r\n");
      out.write("    \t\t$(\"#usePoint\").attr(\"value\",\"0\");\r\n");
      out.write("    \t\t$(this).val('0');\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t$(\"#usePoint\").attr(\"value\",$(\"#popo\").val());\r\n");
      out.write("    \t\r\n");
      out.write("        \t\r\n");
      out.write("    });\r\n");
      out.write("   \r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h1>예약</h1>\r\n");
      out.write("<hr>\r\n");
      out.write("<p>날짜 : <input type=\"text\" value=");
      out.print(date );
      out.write(" readonly=\"readonly\"></p>\r\n");
      out.write("<p>예약자이름 : <input type=\"text\" id=\"naid\"></p>\r\n");
      out.write("<p>메일 주소 : <input type=\"text\"\r\n");
 if(session.getAttribute("member")!=null){ 
	Ya_MemberBean memberBean = (Ya_MemberBean)session.getAttribute("member"); 
		 
      out.write("\r\n");
      out.write(" value = ");
      out.print(memberBean.getEmail() );
      out.write(" readonly=\"readonly\"\r\n");

}

      out.write("\r\n");
      out.write("></p>\r\n");
      out.write("<hr>\r\n");
      out.write("<p>포인트 할인 : <input type=\"text\" value=\"0\" id=\"popo\" ><button id=\"Btn\">포인트 사용하기</button></p>\r\n");
      out.write("<div>   ※사용할 포인트를 입력해주세요 \r\n");
      out.write("<br>\r\n");
      out.write("\t\t사용가능한 포인트 : ");
 
		if(session.getAttribute("member")!=null){ 
			Ya_MemberBean memberBean = (Ya_MemberBean)session.getAttribute("member"); 
			MemberDao dao = MemberDao.getInstance();
			int point = dao.do_search_point(memberBean.getEmail());
		
      out.write("<input type=\"hidden\" id=\"hid\" value=\"");
      out.print(point );
      out.write("\">\r\n");
      out.write("\t");
      out.print(point );
      out.write("포인트\r\n");
      out.write("\t");

	}
     
      out.write("</div>\r\n");
      out.write("<hr>\r\n");
      out.write("<p> 총 주문 금액 : <input type=\"number\" id= \"onPa\" value=\"");
      out.print(roomType);
      out.write("\" readonly=\"readonly\"></p>\r\n");
      out.write("<p> 총 할인 금액 : <input type=\"text\" id=\"usePoint\" value=\"0\" readonly=\"readonly\"></p>\r\n");
      out.write("<p> 총 결제 금액 : <input type=\"number\" id=\"totPay\" value=\"");
      out.print(roomType);
      out.write("\" readonly=\"readonly\"></p>\r\n");
      out.write("<br>\r\n");
      out.write("<hr>\r\n");
      out.write("<p> <h2>카드결제</h2> </p>\r\n");
      out.write("<h3><input type=\"radio\" name=\"chk_info\" value=\"신한\">신한 &nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"현대\">현대 &nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"하나\">하나 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"외환\">외환 &nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"KB국민\">KB국민 &nbsp;&nbsp;<br>\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"비씨\">비씨 &nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"롯데\">롯데 &nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"NH채움\">NH채움 &nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"삼성\">삼성 &nbsp;&nbsp;\r\n");
      out.write("<input type=\"radio\" name=\"chk_info\" value=\"씨티\">씨티</h3> &nbsp;&nbsp;\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("<button id=\"pamen\"><font size=\"30\">결제하기</font></button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
